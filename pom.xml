<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.tan</groupId>
    <artifactId>flink-realtime</artifactId>
    <packaging>pom</packaging>
    <version>3.0.0</version>
    <modules>
        <module>gmall-realtime</module>
    </modules>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.test.skip>true</maven.test.skip>

        <downloadSources>true</downloadSources>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <file_encoding>UTF-8</file_encoding>

        <lombok.version>1.18.20</lombok.version>
        <hutool.version>5.8.11</hutool.version>

        <slf4j.version>1.7.25</slf4j.version>
        <log4j2.version>2.12.1</log4j2.version>

        <flink.version>1.16.0</flink.version>
        <scala.version>2.12</scala.version>

        <kafka.client.version>3.0.0</kafka.client.version>
        <mysql.cdc.version>2.3.0</mysql.cdc.version>
        <hadoop.version>3.1.3</hadoop.version>
        <jedis.version>3.3.0</jedis.version>
        <hbase.phoenix.version>5.0.0-HBase-2.0</hbase.phoenix.version>
        <clickhouse.jdbc.version>0.3.0</clickhouse.jdbc.version>
        <ikanalyzer.version>2012_u6</ikanalyzer.version>
        <druid.version>1.2.6</druid.version>
    </properties>

    <dependencyManagement>

        <dependencies>

            <!--   lombok 工具包         -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>

            <!--   hutool 工具包         -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <!--   flink-1.16.0 基础依赖包         -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-java</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-java</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-clients</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!--  flink cep 依赖包          -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-cep</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!--   flink 整合 kafka 依赖包         -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-kafka</artifactId>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.kafka</groupId>
                        <artifactId>kafka-clients</artifactId>
                    </exclusion>
                </exclusions>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.client.version}</version>
            </dependency>

            <!--   flink 整合 jdbc 依赖包         -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-jdbc</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!--   flink format json csv 依赖包         -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-json</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-csv</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!--   flink 默认使用 slf4j 作为默认的日志框架接口, log4j2 作为默认的日志实现        -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j2.version}</version>
            </dependency>

            <!--  flink mysql cdc 依赖包           -->
            <dependency>
                <groupId>com.ververica</groupId>
                <artifactId>flink-connector-mysql-cdc</artifactId>
                <version>${mysql.cdc.version}</version>
            </dependency>

            <!--  flink bridge (桥接器) Table API 和 底层 DataStream 依赖包          -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-api-java-bridge</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!--  集成开发环境（IDE）里运行 Table API 和 SQL, 需要引入以下依赖 planner、stream-scala -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-planner_${scala.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-scala_${scala.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!--  想实现自定义的数据格式来做序列化，可以引入依赖 table-common          -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-common</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!--  flink 官方的 table example 样例          -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-examples-table_${scala.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <!--  hadoop client 依赖包          -->
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-client</artifactId>
                <version>${hadoop.version}</version>
            </dependency>

            <!--  jedis 客户端依赖包          -->
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>${jedis.version}</version>
            </dependency>

            <!--   hbase phoenix 依赖包         -->
            <dependency>
                <groupId>org.apache.phoenix</groupId>
                <artifactId>phoenix-spark</artifactId>
                <version>${hbase.phoenix.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.glassfish</groupId>
                        <artifactId>javax.el</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--   clickhouse jdbc 依赖包         -->
            <dependency>
                <groupId>ru.yandex.clickhouse</groupId>
                <artifactId>clickhouse-jdbc</artifactId>
                <version>${clickhouse.jdbc.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>jackson-databind</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>jackson-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--  ik 分词器依赖包              -->
            <dependency>
                <groupId>com.janeluo</groupId>
                <artifactId>ikanalyzer</artifactId>
                <version>${ikanalyzer.version}</version>
            </dependency>

            <!--  jdbc 连接池依赖包          -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

        </dependencies>

    </dependencyManagement>

</project>